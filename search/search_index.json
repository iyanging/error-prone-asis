{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#what-is-errorprone","title":"What is ErrorProne ?","text":"<p>Error Prone is a static analysis tool for Java that catches common programming mistakes at compile-time.</p>"},{"location":"#what-is-errorprone-asis","title":"What is ErrorProne-AsIs ?","text":"<p>ErrorProne-AsIs contains extended checks that keep code as-is to reflect your intentions.</p>"},{"location":"#how-to-install-errorprone","title":"How to install ErrorProne ?","text":"<p>See ErrorProne - Installation</p>"},{"location":"#how-to-install-errorprone-asis","title":"How to install ErrorProne-AsIs ?","text":"<p>Just put it in annotation processor path together with ErrorProne</p>"},{"location":"#want-some-gradle-example","title":"Want some Gradle example ?","text":"build.gradle.kts<pre><code>import net.ltgt.gradle.errorprone.CheckSeverity\nimport net.ltgt.gradle.errorprone.errorprone\n\nplugins {\n    id(\"net.ltgt.errorprone\") version \"&lt;version&gt;\"\n}\n\ndependencies {\n    errorprone(\"com.google.errorprone:error_prone_core:&lt;version&gt;\")\n    errorprone(\"io.github.iyanging:error-prone-asis:&lt;version&gt;\")\n}\n\ntasks.withType&lt;JavaCompile&gt;().configureEach {\n    options.errorprone {\n        disableWarningsInGeneratedCode = true\n        errorproneArgs = listOf(\"-XepAllSuggestionsAsWarnings\")\n        checks = mapOf(\n            \"MissingCasesInEnumSwitch\" to CheckSeverity.ERROR,\n            \"ReferenceEquality\" to CheckSeverity.ERROR,\n            \"UnnecessaryParentheses\" to CheckSeverity.OFF,\n            // error-prone-asis\n            \"JpaImplicitEnum\" to CheckSeverity.ERROR,\n            \"JpaDefaultDecimal\" to CheckSeverity.ERROR,\n        )\n    }\n}\n</code></pre>"}]}